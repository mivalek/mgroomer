events {}

http {

    server {
        listen 80;

        location / {
            proxy_pass http://frontend:3000/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;            
            # Add CORS headers
            add_header Access-Control-Allow-Origin $http_origin;  # Allow all origins
        }

        location /api/v1 {
            
            # Add CORS headers
            add_header Access-Control-Allow-Origin $http_origin;  # Allow all origins
            add_header Access-Control-Allow-Methods "GET, HEAD, POST, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range";

            client_max_body_size 0;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header  Authorization $http_authorization;
            proxy_pass_header Authorization;
            proxy_pass http://backend:8080/api/v1;
            
        }

        location /media {
            proxy_pass http://file-server:8800/media;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}